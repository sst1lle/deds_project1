EXEC sp_MSforeachtable "ALTER TABLE ? NOCHECK CONSTRAINT ALL"


CREATE TABLE HumanResources_Department (
    DepartmentID INT PRIMARY KEY,
    Name VARCHAR(100),
    GroupName VARCHAR(100),
    ModifiedDate DATETIME,
    Source VARCHAR(50)
);

CREATE TABLE Person_Person (
    MergedBusinessEntityID INT PRIMARY KEY,
    BusinessEntityID INT,
    PersonType VARCHAR(50),
    NameStyle VARCHAR(100),
    Title VARCHAR(255),
    LastName VARCHAR(100),
    Suffix VARCHAR(50),
    EmailPromotion VARCHAR(50),
    rowguid VARCHAR(100),
    PhoneNumber VARCHAR(50),
    ModifiedDate DATETIME,
    Source VARCHAR(50)
);



    CREATE TABLE HumanResources_Employee (
    MergedBusinessEntityID INT PRIMARY KEY,
    BusinessEntityID INT,
    JobTitle VARCHAR(255),
    BirthDate DATETIME,
    HireDate DATETIME,
    Gender VARCHAR(50),
    Salary DECIMAL(10,2),
    DepartmentID INT,
    ManagerID INT,
    Source VARCHAR(50),
    FOREIGN KEY (DepartmentID) REFERENCES HumanResources_Department(DepartmentID),
    FOREIGN KEY (ManagerID) REFERENCES HumanResources_Employee(MergedBusinessEntityID),
    FOREIGN KEY (MergedBusinessEntityID) REFERENCES Person_Person(MergedBusinessEntityID)
);



CREATE TABLE Person_Address (
    AddressID INT PRIMARY KEY,
    AddressLine1 VARCHAR(100),
    AddressLine2 VARCHAR(100),
    City VARCHAR(50),
    StateProvinceID VARCHAR(50),
    PostalCode VARCHAR(20),
    BusinessEntityID INT,
    FOREIGN KEY (BusinessEntityID) REFERENCES Person_Person(MergedBusinessEntityID)
);
CREATE TABLE Production_ProductCategory (
    MergedCategoryID INT PRIMARY KEY,
    ProductCategoryID INT,
    Name VARCHAR(100),
    rowguid VARCHAR(50),
    Description VARCHAR(255),
    ModifiedDate DATETIME,
    Source VARCHAR(50),

);

CREATE TABLE Shippers (
    ShipperID INT PRIMARY KEY,
    CompanyName VARCHAR(100),
    Phone VARCHAR(50)
);

CREATE TABLE Suppliers (
    SupplierID INT PRIMARY KEY,
    CompanyName VARCHAR(100),
    ContactName VARCHAR(100),
    ContactTitle VARCHAR(255),
    Address VARCHAR(50),
    City VARCHAR(50),
    Region VARCHAR(50),
    PostalCode VARCHAR(20),
    Country VARCHAR(50),
    Phone VARCHAR(50),
    Fax VARCHAR(50),
    HomePage VARCHAR(1000)
);

CREATE TABLE Production_Product (
    MergedID INT PRIMARY KEY,
    ProductID INT,
    Name VARCHAR(100),
    ProductNumber VARCHAR(30),
    MakeFlag INT,
    FinishedGoodsFlag INT,
    Color VARCHAR(50),
    SafetyStockLevel VARCHAR(50),
    ReorderPoint VARCHAR(50),
    StandardCost VARCHAR(50),
    ListPrice VARCHAR(50),
    Size VARCHAR(50),
    SizeUnitMeasureCode VARCHAR(20),
    WeightUnitMeasureCode VARCHAR(20),
    Weight VARCHAR(50),
    DaysToManufacture VARCHAR(50),
    ProductLine VARCHAR(100),
    Class VARCHAR(100),
    Style VARCHAR(50),
    ProductSubcategoryID VARCHAR(30),
    ProductModelID VARCHAR(30),
    SellStartDate DATETIME,
    SellEndDate DATETIME,
    rowguid VARCHAR(50),
    ModifiedDate DATETIME,
    ProductCategoryID INT,
    Source VARCHAR(50),
    Discontinued VARCHAR(50),
    QuantityPerUnit VARCHAR(50),
    quantity VARCHAR(50), 	
    UnitsInStock VARCHAR(50),
    UnitsOnOrder VARCHAR(50),
    description VARCHAR(255),
    SupplierID INT,
    FOREIGN KEY (ProductCategoryID) REFERENCES Production_ProductCategory(MergedCategoryID),
    FOREIGN KEY (SupplierID) REFERENCES Suppliers(SupplierID)
);
CREATE TABLE Purchasing_Vendor (
    BusinessEntityID INT PRIMARY KEY,
    AccountNumber VARCHAR(100),
    Name VARCHAR(100),
    CreditRating VARCHAR(50),
    PreferredVendorStatus VARCHAR(50),
    ActiveFlag INT,
    PurchasingWebServiceURL VARCHAR(50),
    ModifiedDate DATETIME
);


CREATE TABLE Purchasing_PurchaseOrderHeader (
    PurchaseOrderID INT PRIMARY KEY,
    RevisionNumber VARCHAR(50),
    Status INT,
    EmployeeID INT,
    VendorID INT,
    ShipMethodID INT,
    OrderDate DATETIME,
    ShipDate DATETIME,
    SubTotal VARCHAR(50),
    TaxAmt VARCHAR(50),
    Freight VARCHAR(50),
    TotalDue VARCHAR(50),
    ModifiedDate DATETIME,
    FOREIGN KEY (EmployeeID) REFERENCES HumanResources_Employee(MergedBusinessEntityID),
    FOREIGN KEY (VendorID) REFERENCES Purchasing_Vendor(BusinessEntityID),
    FOREIGN KEY (ShipMethodID) REFERENCES Shippers(ShipperID)
);


CREATE TABLE Purchasing_PurchaseOrderDetail (
    PurchaseOrderID INT,
    PurchaseOrderDetailID INT PRIMARY KEY,
    DueDate DATETIME,
    OrderQty VARCHAR(50),
    ProductID INT,
    UnitPrice VARCHAR(50),
    LineTotal VARCHAR(100),
    ReceivedQty VARCHAR(50),
    RejectedQty VARCHAR(50),
    StockedQty VARCHAR(50),
    ModifiedDate DATETIME,
    Source VARCHAR(50),
    FOREIGN KEY (PurchaseOrderID) REFERENCES Purchasing_PurchaseOrderHeader(PurchaseOrderID),
    FOREIGN KEY (ProductID) REFERENCES Production_Product(MergedID)
);
CREATE TABLE Sales_SalesTerritory (
    TerritoryID INT PRIMARY KEY,
    Name VARCHAR(100),
    CountryRegionCode VARCHAR(20),
    Group1 VARCHAR(50),
    SalesYTD VARCHAR(50),
    SalesLastYear VARCHAR(50),
    CostYTD VARCHAR(50),
    CostLastYear VARCHAR(50),
    rowguid VARCHAR(50),
    ModifiedDate DATETIME,
    region VARCHAR(50)
);

CREATE TABLE Sales_Store (
    BusinessEntityID INT PRIMARY KEY,
    Name VARCHAR(1000),
    SalesPersonID INT,
    rowguid VARCHAR(50),
    ModifiedDate DATETIME,
    FOREIGN KEY (SalesPersonID) REFERENCES HumanResources_Employee(MergedBusinessEntityID)
);

CREATE TABLE Sales_Customer (
    MergedCustomerID INT PRIMARY KEY,
    CustomerID VARCHAR(50),  -- Kan zowel tekst als getallen bevatten
    PersonID INT,
    StoreID INT,
    TerritoryID INT,
    CompanyName VARCHAR(100),
    AccountNumber VARCHAR(50),
    rowguid VARCHAR(50),
    ModifiedDate DATETIME,
    Source VARCHAR(50),  -- Geeft aan uit welke database de klant komt
    FOREIGN KEY (PersonID) REFERENCES Person_Person(MergedBusinessEntityID),
    FOREIGN KEY (TerritoryID) REFERENCES Sales_SalesTerritory(TerritoryID) 
);

CREATE TABLE Sales_SalesOrderHeader (
    SalesOrderID INT PRIMARY KEY,
    RevisionNumber VARCHAR(30),
    OrderDate DATETIME,
    DueDate DATETIME,
    ShipDate DATETIME,
    CustomerID INT,
    SalesPersonID INT,
    TerritoryID INT,
    SubTotal VARCHAR(50),
    ShipVia INT,
    ShipCountry VARCHAR(50),
    ShipRegion VARCHAR(50),
    ShipCity VARCHAR(50),
    Source VARCHAR(50),  -- Geeft aan uit welke database de klant komt
    FOREIGN KEY (CustomerID) REFERENCES Sales_Customer(MergedCustomerID),
    FOREIGN KEY (SalesPersonID) REFERENCES HumanResources_Employee(MergedBusinessEntityID),
    FOREIGN KEY (TerritoryID) REFERENCES Sales_SalesTerritory(TerritoryID),
    FOREIGN KEY (ShipVia) REFERENCES Shippers(ShipperID)
);

CREATE TABLE Sales_SalesOrderDetail (
    SalesOrderID INT ,
    SalesOrderDetailID INT ,
    OrderQty VARCHAR(50),
    ProductID INT,
    UnitPrice VARCHAR(50),
    UnitPriceDiscount VARCHAR(50),
    LineTotal VARCHAR(100),
    Source VARCHAR(50),
    PRIMARY KEY (SalesOrderID , SalesOrderDetailID),
    FOREIGN KEY (SalesOrderID) REFERENCES Sales_SalesOrderHeader(SalesOrderID),
    FOREIGN KEY (ProductID) REFERENCES Production_Product(MergedID)
);

CREATE TABLE Region (
    RegionID INT PRIMARY KEY, 
    RegionDescription VARCHAR(255)
);

CREATE TABLE Territories (
    TerritoryID INT PRIMARY KEY,
    TerritoryDescription VARCHAR(255),
    RegionID INT,
    FOREIGN KEY (RegionID) REFERENCES Region(RegionID)
);



CREATE TABLE EmployeeTerritories (
    EmployeeID INT,
    TerritoryID INT,
    PRIMARY KEY (EmployeeID, TerritoryID),
    FOREIGN KEY (EmployeeID) REFERENCES HumanResources_Employee(MergedBusinessEntityID),
    FOREIGN KEY (TerritoryID) REFERENCES Territories(TerritoryID)
);


CREATE TABLE Bonus (
    emp_id INT,
    bonus_date VARCHAR(20),
    bonus_amount VARCHAR(20),
    PRIMARY KEY (emp_id, bonus_date),
    FOREIGN KEY (emp_id) REFERENCES HumanResources_Employee(MergedBusinessEntityID)
);

EXEC sp_MSforeachtable "ALTER TABLE ? WITH CHECK CHECK CONSTRAINT ALL"
