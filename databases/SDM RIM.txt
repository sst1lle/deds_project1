CREATE TABLE HumanResources_Department (
    DepartmentID INT PRIMARY KEY,
    Name VARCHAR(100),
    GroupName VARCHAR(100),
    ModifiedDate DATE,
    Source VARCHAR(50)
);

CREATE TABLE Person_Person (
    MergedBusinessEntityID INT PRIMARY KEY,
    BusinessEntityID INT,
    PersonType VARCHAR(50),
    NameStyle VARCHAR(100),
    Title VARCHAR(255),
    LastName VARCHAR(100),
    Suffix VARCHAR(50),
    EmailPromotion VARCHAR(50),
    rowguid VARCHAR(100),
    PhoneNumber VARCHAR(30),
    ModifiedDate DATE,
    Source VARCHAR(50)
);



    CREATE TABLE HumanResources_Employee (
    MergedBusinessEntityID INT PRIMARY KEY,
    BusinessEntityID INT,
    JobTitle VARCHAR(255),
    BirthDate DATE,
    HireDate DATE,
    Gender VARCHAR(50),
    Salary DECIMAL(10,2),
    DepartmentID INT,
    ManagerID INT,
    Source VARCHAR(50),
    FOREIGN KEY (DepartmentID) REFERENCES HumanResources_Department(DepartmentID),
    FOREIGN KEY (ManagerID) REFERENCES HumanResources_Employee(BusinessEntityID),
    FOREIGN KEY (MergedBusinessEntityID) REFERENCES Person_Person(MergedBusinessEntityID)
);



CREATE TABLE Person_Address (
    AddressID INT PRIMARY KEY,
    AddressLine1 VARCHAR(100),
    AddressLine2 VARCHAR(100),
    City VARCHAR(50),
    StateProvinceID VARCHAR(50),
    PostalCode VARCHAR(20),
    BusinessEntityID INT,
    FOREIGN KEY (BusinessEntityID) REFERENCES Person_Person(MergedBusinessEntityID)
);
CREATE TABLE Production_ProductCategory (
    MergedCategoryID INT PRIMARY KEY,
    ProductCategoryID INT,
    Name VARCHAR(100),
    rowguide INT,
    Description VARCHAR(255),
    Picture VARCHAR(50),
    ModifiedDate DATE
);

CREATE TABLE Shippers (
    ShippersID INT PRIMARY KEY,
    CompanyName VARCHAR(100),
    Phone VARCHAR(50)
);

CREATE TABLE Suppliers (
    SupplierID INT PRIMARY KEY,
    CompanyName VARCHAR(100),
    ConatctName VARCHAR(100),
    ConatactTitle VARCHAR(255),
    Adddress VARCHAR(50),
    City VARCHAR(50),
    Region VARCHAR(50),
    PostalCode VARCHAR(20),
    Counrtry VARCHAR(50),
    Phone VARCHAR(50),
    Fax VARCHAR(50),
    HomePage VARCHAR(50)
);


CREATE TABLE Production_Product (
    MergedID INT PRIMARY KEY,
    ProductID INT,
    Name VARCHAR(100),
    ProductNumber VARCHAR(30),
    MakeFlag BIT,
    FinishedGoodFlag BIT,
    Color VARCHAR(50),
    SafetyStockLevel VARCHAR(50),
    ReorderPoint VARCHAR(50),
    StandardCost VARCHAR(50),
    ListPrice VARCHAR(50),
    Size VARCHAR(50),
    SizeUnitMeasureCode VARCHAR(20),
    WeightUnitMeasureCode VARCHAR(20),
    Weight VARCHAR(50),
    DaysToManufacture VARCHAR(50),
    ProductLine VARCHAR(100),
    Class VARCHAR(100),
    Style VARCHAR(50),
    ProductionSubcategoryID INT,
    ProductModelID INT,
    SellStartDate DATE,
    SellEndDate DATE,
    DiscontinuedDate DATE,
    rowguid INT,
    ModifiedDate DATE,
    ProductCategoryID INT,
    Discontinued VARCHAR(50),
    QuantityPerUnit VARCHAR(50),
    quantity VARCHAR(50), 	
    description VARCHAR(255),
    UnitsInStock VARCHAR(50),
    UnitsOnOrder VARCHAR(50),
    SupplierID INT,
    FOREIGN KEY (ProductCategoryID) REFERENCES Production_ProductCategory(MergedCategoryID),
    FOREIGN KEY (SupplierID) REFERENCES Suppliers(SupplierID)
);
CREATE TABLE Purchasing_Vendor (
    BusinessEntityID INT PRIMARY KEY,
    AccountNumber VARCHAR(30),
    Name VARCHAR(100),
    CreditRating VARCHAR(50),
    PreferredVendorStatus VARCHAR(50),
    ActiveFlag BIT,
    PurchasingWebServiceURL VARCHAR(50),
    ModifiedDate DATE
);

Rows: 4012
  PurchaseOrderID RevisionNumber Status EmployeeID VendorID ShipMethodID  \
0               1              4      4        258     1580            3   
1               2              4      1        254     1496            5   
2               3              4      4        257     1494            2   
3               4              4      3        261     1650            5   
4               5              4      4        251     1654            4   

           OrderDate           ShipDate  SubTotal    TaxAmt   Freight  \
0  04/16/21 00:00:00  04/25/21 00:00:00    201.04   16.0832     5.026   
1  04/16/21 00:00:00  04/25/21 00:00:00  272.1015   21.7681    6.8025   
2  04/16/21 00:00:00  04/25/21 00:00:00    8847.3   707.784  221.1825   
3  04/16/21 00:00:00  04/25/21 00:00:00  171.0765   13.6861    4.2769   
4  04/30/21 00:00:00  05/09/21 00:00:00   20397.3  1631.784  509.9325   

     TotalDue       ModifiedDate  
0    222.1492  04/25/21 00:00:00  
1    300.6721  04/25/21 00:00:00  

CREATE TABLE Purchasing_PurchaseOrderHeader (
    PurchaseOrderID INT PRIMARY KEY,
    RevisionNumber VARCHAR(30),
    Status BIT,
    EmployeeID INT,
    VendorID INT,
    ShipMethodID INT,
    OrderDate DATE,
    ShipDate DATE,
    SubTotal VARCHAR(50),
    TaxAmt VARCHAR(50),
    Freight VARCHAR(50),
    TotalDue VARCHAR(50),
    ModifiedDate DATE,
    FOREIGN KEY (EmployeeID) REFERENCES HumanResources_Employee(MergedBusinessEntityID),
    FOREIGN KEY (VendorID) REFERENCES Purchasing_Vendor(BusinessEntityID),
    FOREIGN KEY (ShipMethodID) REFERENCES Shippers(ShippersID)
);


CREATE TABLE Purchasing_PurchaseOrderDetail (
    PurchaseOrderID INT,
    PurchaseOrderDetailID INT PRIMARY KEY,
    DueDate DATE,
    OrderQty VARCHAR(50),
    MergedID INT,
    UnitPrice VARCHAR(50),
    LineTotal VARCHAR(100),
    ReceivedQty VARCHAR(50),
    RejectedQty VARCHAR(50),
    StockedQty VARCHAR(50),
    ModifiedDate DATE,
    FOREIGN KEY (PurchaseOrderID) REFERENCES Purchasing_PurchaseOrderHeader(PurchaseOrderID),
    FOREIGN KEY (MergedID) REFERENCES Production_Product(MergedID)
);
CREATE TABLE Sales_SalesTerritory (
    TerritoryID INT PRIMARY KEY,
    Name VARCHAR(100),
    CountryRegionCode VARCHAR(20),
    Group1 VARCHAR(50),
    SalesYTD VARCHAR(50),
    SalesLastYear VARCHAR(50),
    CostYTD VARCHAR(50),
    CostLastYear VARCHAR(50),
    rowguid INT,
    ModifiedDate DATE,
    region VARCHAR(50)
);

CREATE TABLE Sales_Store (
    BusinessEntityID INT PRIMARY KEY,
    Name VARCHAR(100),
    SalesPersonID INT,
    rowguid INT,
    ModifiedDate DATE,
    FOREIGN KEY (SalesPersonID) REFERENCES HumanResources_Employee(MergedBusinessEntityID)
);

CREATE TABLE Sales_Customer (
    MergedCustomerID INT PRIMARY KEY AUTO_INCREMENT,
    CustomerID VARCHAR(50),  -- Kan zowel tekst als getallen bevatten
    PersonID INT,
    StoreID INT,
    TerritoryID INT,
    CompanyName VARCHAR(100),
    AccountNumber VARCHAR(30),
    rowguid VARCHAR(50),
    ModifiedDate DATE,
    Source VARCHAR(50),  -- Geeft aan uit welke database de klant komt
    FOREIGN KEY (PersonID) REFERENCES Person_Person(MergedBusinessEntityID),
=    FOREIGN KEY (TerritoryID) REFERENCES Sales_SalesTerritory(TerritoryID) 
);

CREATE TABLE Sales_SalesOrderHeader (
    SalesOrderID INT PRIMARY KEY,
    RevisionNumber VARCHAR(30),
    OrderDate DATE,
    DueDate DATE,
    ShipDate DATE,
    CustomerID INT,
    SalesPersonID INT,
    TerritoryID INT,
    SubTotal VARCHAR(50),
    ShipVia VARCHAR(50),
    ShipCountry VARCHAR(50),
    ShipRegion VARCHAR(50),
    ShipCity VARCHAR(50),
    FOREIGN KEY (CustomerID) REFERENCES Sales_Customer(CustomerID),
    FOREIGN KEY (SalesPersonID) REFERENCES HumanResources_Employee(MergedBusinessEntityID),
    FOREIGN KEY (TerritoryID) REFERENCES Sales_SalesTerritory(TerritoryID),
    FOREIGN KEY (ShipVia) REFERENCES Shippers(ShippersID)
);

CREATE TABLE Sales_SalesOrderDetail (
    SalesOrderID INT ,
    SalesOrderDetailID INT ,
    OrderQty VARCHAR(50),
    ProductID INT,
    UnitPrice VARCHAR(50),
    UnitPriceDiscount VARCHAR(50),
    LineTotal VARCHAR(100),
    PRIMARY KEY (SalesOrderID , SalesOrderDetailID),
    FOREIGN KEY (SalesOrderID) REFERENCES Sales_SalesOrderHeader(SalesOrderID),
    FOREIGN KEY (ProductID) REFERENCES Production_Product(MergedID)
);

CREATE TABLE Region (
    RegionID INT PRIMARY KEY, 
    RegionDescription VARCHAR(255)
);

CREATE TABLE Territories (
    TerritoryID INT PRIMARY KEY,
    TerritoryDescription VARCHAR(255),
    RegionID INT,
    FOREIGN KEY (RegionID) REFERENCES Region(RegionID)
);



CREATE TABLE EmployeeTerritories (
    BusinessEntityID INT,
    TerritoryID INT,
    PRIMARY KEY (BusinessEntityID, TerritoryID),
    FOREIGN KEY (BusinessEntityID) REFERENCES HumanResources_Employee(MergedBusinessEntityID),
    FOREIGN KEY (TerritoryID) REFERENCES Territories(TerritoryID)
);


CREATE TABLE Bonus (
    emp_id INT,
    bonus_date DATE,
    bonus_amount DECIMAL(10,2),
    PRIMARY KEY (emp_id, bonus_date),
    FOREIGN KEY (emp_id) REFERENCES HumanResources_Employee(MergedBusinessEntityID)
);
